@startuml figures
class Raum {
    kollektion: Figur[*]
+addFigur(figur: Figure): void
+alleFigurenAnzeigen(figur: Figur[*]): String
+ausgabeGesamtFlaecheFigur2D(): Double
+ausgabeGesamtVolumenFigur3D(): Double
}

abstract Figur {
    #reduceToTwoDecimalPlacesDouble(value: Double): Double
}

abstract Figur2D {
    +getUmfang(): Double
    +getFlaeche(): Double
    #toStringUmfangFlaeche(): String
}

abstract Figur3D {
    +getVolumen(): Double
    +getOberflaeche(): Double
    #toStringVolumenOberflaeche(): String
}

class Kugel {
    -radius: Double
+getVolumen(): Double
+getOberflaeche(): Double
+toString(): String
}

class Zylinder {
    -radius: Double
    -hoehe: Double
+Zylinder(radius: Double, hoehe: Double)
+getVolumen(): Double
+getOberflaeche(): Double
+toString(): String
}

class Dreieck {
    -seiteA: Double
    -seiteB: Double
    -seiteC: Double
+Dreieck(seiteA: Double, seiteB: Double, seiteC: Double)
+getUmfang(): Double
+getFlaeche(): Double
+toString(): String
-computeHoeheC(): Double
}

class Raute {
    -seiteA: Double
    -seiteE: Double
    -seiteF: Double
+Raute(seiteA: Double, seiteE: Double, seiteF:Double)
+getUmfang(): Double
+getFlaeche(): Double
+toString(): String
}

class Quadrat {
    -seiteA: Double
+Quadrat(seiteA: Double)
+getUmfang(): Double
+getFlaeche(): Double
+toString(): String
}

Raum "0..1" o-- "1..*" Figur
Figur <|-- Figur3D
Figur <|-- Figur2D
Figur2D <|-- Dreieck
Figur2D <|-- Raute
Figur2D <|-- Quadrat
Figur3D <|-- Kugel
Figur3D <|-- Zylinder
@enduml